name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/myapp:test

      - name: Push Docker image to Docker Hub
        if: success()
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Run tests
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/myapp:test \
            /bin/bash -c "coverage run -m pytest --maxfail=1 --disable-warnings && coverage report --fail-under=80"

      - name: Push Docker image to Docker Hub
        if: success()
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    needs: [ build-and-test ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Droplet via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DOCKER_DROPLET_IP }}
          username: root
          key: ${{ secrets.DOCKER_DROPLET_SSH_KEY}}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest
            docker stop myapp_container || true
            docker rm myapp_container || true
            docker run -d -p 80:8000 --name myapp_container ${{ secrets.DOCKER_USERNAME }}/myapp:latest
